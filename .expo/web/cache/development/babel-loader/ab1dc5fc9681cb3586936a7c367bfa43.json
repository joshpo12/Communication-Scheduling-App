{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ikaur2/Desktop/scheduling-app-mobile/screens/Scheduling.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CalendarPicker from 'react-native-calendar-picker';\n\nvar Scheduling = function (_Component) {\n  _inherits(Scheduling, _Component);\n\n  var _super = _createSuper(Scheduling);\n\n  function Scheduling(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduling);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedStartDate: null\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Scheduling, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      this.setState({\n        selectedStartDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedStartDate = this.state.selectedStartDate;\n      var startDate = selectedStartDate ? selectedStartDate.toString() : '';\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(CalendarPicker, {\n        onDateChange: this.onDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \"SELECTED DATE:\", startDate)));\n    }\n  }]);\n\n  return Scheduling;\n}(Component);\n\nexport { Scheduling as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    marginTop: 100\n  }\n});","map":{"version":3,"sources":["/Users/ikaur2/Desktop/scheduling-app-mobile/screens/Scheduling.js"],"names":["React","Component","CalendarPicker","Scheduling","props","state","selectedStartDate","onDateChange","bind","date","setState","startDate","toString","styles","container","StyleSheet","create","flex","backgroundColor","marginTop"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;IAEuBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AALiB;AAMlB;;;;iCAEYC,I,EAAM;AACjB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,iBAAiB,EAAEG;AADP,OAAd;AAGD;;;6BACQ;AAAA,UACCH,iBADD,GACuB,KAAKD,KAD5B,CACCC,iBADD;AAEP,UAAMK,SAAS,GAAGL,iBAAiB,GAAGA,iBAAiB,CAACM,QAAlB,EAAH,GAAkC,EAArE;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,YAAY,EAAE,KAAKP,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBI,SAAtB,CADF,CALF,CADF;AAWD;;;;EA5BqCV,S;;SAAnBE,U;AA0DnB,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,SAAS,EAAE;AAHF;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, ImageBackground, Image, SafeAreaView, TextInput, Dimensions, BackHandler, Button, Alert } from 'react-native';\nimport CalendarPicker from 'react-native-calendar-picker';\n\n  export default class Scheduling extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        selectedStartDate: null,\n      };\n      this.onDateChange = this.onDateChange.bind(this);\n    }\n  \n    onDateChange(date) {\n      this.setState({\n        selectedStartDate: date,\n      });\n    }\n    render() {\n      const { selectedStartDate } = this.state;\n      const startDate = selectedStartDate ? selectedStartDate.toString() : '';\n      return (\n        <View style={styles.container}>\n          <CalendarPicker\n            onDateChange={this.onDateChange}\n          />\n  \n          <View>\n            <Text>SELECTED DATE:{ startDate }</Text>\n          </View>\n        </View>\n      );\n    }\n\n\n\n\n\n\n\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     selectedStartDate: null,\n    //   };\n    //   this.onDateChange = this.onDateChange.bind(this);\n    // }\n   \n    // onDateChange(date) {\n    //   this.setState({\n    //     selectedStartDate: date,\n    //   });\n    // }\n    // render(){\n    //   return (\n\n    //   );\n    // }\n  }\n\n    // const { selectedStartDate } = this.state;\n    // const startDate = selectedStartDate ? selectedStartDate.toString() : '';\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#FFFFFF',\n        marginTop: 100,\n      },\n    });"]},"metadata":{},"sourceType":"module"}