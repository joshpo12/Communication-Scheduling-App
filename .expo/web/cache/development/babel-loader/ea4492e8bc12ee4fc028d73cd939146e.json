{"ast":null,"code":"var _jsxFileName = \"/Users/ikaur2/Desktop/scheduling-app-mobile/node_modules/react-native-calendar-picker/CalendarPicker/Day.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nexport default function Day(props) {\n  var day = props.day,\n      month = props.month,\n      year = props.year,\n      styles = props.styles,\n      customDatesStyles = props.customDatesStyles,\n      onPressDay = props.onPressDay,\n      selectedStartDate = props.selectedStartDate,\n      selectedEndDate = props.selectedEndDate,\n      allowRangeSelection = props.allowRangeSelection,\n      allowBackwardRangeSelect = props.allowBackwardRangeSelect,\n      selectedDayStyle = props.selectedDayStyle,\n      selectedDisabledDatesTextStyle = props.selectedDisabledDatesTextStyle,\n      selectedRangeStartStyle = props.selectedRangeStartStyle,\n      selectedRangeStyle = props.selectedRangeStyle,\n      selectedRangeEndStyle = props.selectedRangeEndStyle,\n      textStyle = props.textStyle,\n      todayTextStyle = props.todayTextStyle,\n      propSelectedDayTextStyle = props.selectedDayTextStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledDates = props.disabledDates,\n      disabledDatesTextStyle = props.disabledDatesTextStyle,\n      minRangeDuration = props.minRangeDuration,\n      maxRangeDuration = props.maxRangeDuration,\n      enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day,\n    hour: 12\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var daySelectedStyle = styles.dayButton;\n  var selectedDayTextStyle = {};\n  var propSelectedDayStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateRangeLessThanMin = false;\n  var dateRangeGreaterThanMax = false;\n  var customContainerStyle, customDateStyle, customTextStyle;\n\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n    var daysDiff = thisDay.diff(selectedStartDate, 'days');\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\n\n    if (maxRangeDuration) {\n      if (Array.isArray(maxRangeDuration)) {\n        var maxRangeEntry = maxRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\n          dateRangeGreaterThanMax = true;\n        }\n      } else if (daysDiff > maxRangeDuration) {\n        dateRangeGreaterThanMax = true;\n      }\n    }\n\n    if (minRangeDuration) {\n      if (Array.isArray(minRangeDuration)) {\n        var minRangeEntry = minRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\n          dateRangeLessThanMin = true;\n        }\n      } else if (daysDiff < minRangeDuration) {\n        dateRangeLessThanMin = true;\n      }\n    }\n\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\n      dateRangeLessThanMin = true;\n    }\n  }\n\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\n  var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n  var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n  var isThisDateInSelectedRange = selectedStartDate && selectedEndDate && thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '[]');\n\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\n    var isToday = thisDay.isSame(today, 'day');\n\n    if (isToday) {\n      daySelectedStyle = styles.selectedToday;\n      selectedDayTextStyle = [propSelectedDayTextStyle, todayTextStyle || styles.selectedDayLabel];\n    }\n\n    if (Array.isArray(customDatesStyles)) {\n      for (var _iterator = _createForOfIteratorHelperLoose(customDatesStyles), _step; !(_step = _iterator()).done;) {\n        var cds = _step.value;\n\n        if (thisDay.isSame(moment(cds.date), 'day')) {\n          customContainerStyle = cds.containerStyle;\n          customDateStyle = cds.style;\n          customTextStyle = cds.textStyle;\n          break;\n        }\n      }\n    } else if (customDatesStyles instanceof Function) {\n      var _cds = customDatesStyles(thisDay) || {};\n\n      customContainerStyle = _cds.containerStyle;\n      customDateStyle = _cds.style;\n      customTextStyle = _cds.textStyle;\n    }\n\n    if (isToday && customDateStyle) {\n      daySelectedStyle = [daySelectedStyle, customDateStyle];\n    }\n\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      daySelectedStyle = styles.selectedDay;\n      selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel, isToday && todayTextStyle];\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\n    }\n\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\n        }\n\n        if (isThisDaySameAsSelectedEnd) {\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\n        }\n\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\n        }\n\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\n        }\n      }\n\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\n      }\n    }\n\n    if (dateOutOfRange) {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, customContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [customDateStyle, daySelectedStyle, propSelectedDayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, styles.disabledText, disabledDatesTextStyle, styles.selectedDisabledText, selectedDisabledDatesTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, day)));\n    } else {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, customContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: !enableDateChange,\n        style: [customDateStyle, daySelectedStyle, propSelectedDayStyle],\n        onPress: function onPress() {\n          return onPressDay({\n            year: year,\n            month: month,\n            day: day\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, customTextStyle, selectedDayTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, day)));\n    }\n  } else {\n    return React.createElement(View, {\n      style: styles.dayWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, styles.disabledText, disabledDatesTextStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, day));\n  }\n}\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"sources":["/Users/ikaur2/Desktop/scheduling-app-mobile/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"names":["React","PropTypes","moment","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","allowBackwardRangeSelect","selectedDayStyle","selectedDisabledDatesTextStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","propSelectedDayTextStyle","selectedDayTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","hour","today","dateOutOfRange","daySelectedStyle","dayButton","propSelectedDayStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateRangeLessThanMin","dateRangeGreaterThanMax","customContainerStyle","customDateStyle","customTextStyle","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","daysDiff","diff","Math","abs","maxRangeEntry","find","mrd","isSame","date","maxDuration","minRangeEntry","minDuration","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","isThisDateInSelectedRange","isBetween","isToday","selectedToday","selectedDayLabel","cds","containerStyle","style","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","inRangeDay","dayWrapper","dayLabel","disabledText","selectedDisabledText","defaultProps","propTypes","shape","number","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    allowBackwardRangeSelect,\r\n    selectedDayStyle,\r\n    selectedDisabledDatesTextStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    selectedDayTextStyle: propSelectedDayTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day, hour: 12 });\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let daySelectedStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayTextStyle = {};\r\n  let propSelectedDayStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateRangeLessThanMin = false;\r\n  let dateRangeGreaterThanMax = false;\r\n  let customContainerStyle, customDateStyle, customTextStyle;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n    let daysDiff = thisDay.diff(selectedStartDate, 'days'); // may be + or -\r\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\r\n\r\n    if (maxRangeDuration) {\r\n      if (Array.isArray(maxRangeDuration)) {\r\n        let maxRangeEntry = maxRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\r\n          dateRangeGreaterThanMax = true;\r\n        }\r\n      } else if(daysDiff > maxRangeDuration) {\r\n        dateRangeGreaterThanMax = true;\r\n      }\r\n    }\r\n\r\n    if (minRangeDuration) {\r\n      if (Array.isArray(minRangeDuration)) {\r\n        let minRangeEntry = minRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\r\n          dateRangeLessThanMin = true;\r\n        }\r\n      } else if(daysDiff < minRangeDuration) {\r\n        dateRangeLessThanMin = true;\r\n      }\r\n    }\r\n\r\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\r\n      dateRangeLessThanMin = true;\r\n    }\r\n  }\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\r\n\r\n  let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n  let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n  let isThisDateInSelectedRange =\r\n    selectedStartDate\r\n    && selectedEndDate\r\n    && thisDay.isBetween(selectedStartDate, selectedEndDate,'day','[]');\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      daySelectedStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayTextStyle = [propSelectedDayTextStyle, todayTextStyle || styles.selectedDayLabel];\r\n    }\r\n\r\n    if (Array.isArray(customDatesStyles)) {\r\n      for (let cds of customDatesStyles) {\r\n        if (thisDay.isSame(moment(cds.date), 'day')) {\r\n          customContainerStyle = cds.containerStyle;\r\n          customDateStyle = cds.style;\r\n          customTextStyle = cds.textStyle;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else if (customDatesStyles instanceof Function) {\r\n      let cds = customDatesStyles(thisDay) || {};\r\n      customContainerStyle = cds.containerStyle;\r\n      customDateStyle = cds.style;\r\n      customTextStyle = cds.textStyle;\r\n    }\r\n    if (isToday && customDateStyle) {\r\n      // Custom date style overrides 'today' style. It may be reset below\r\n      // by date selection styling.\r\n      daySelectedStyle = [daySelectedStyle, customDateStyle];\r\n    }\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart) {\r\n      daySelectedStyle = styles.selectedDay;\r\n      selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel, isToday && todayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n        // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day')) {\r\n          daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\r\n        }\r\n        // Apply style if this day is in range\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\r\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart) {\r\n        daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n        selectedDayTextStyle = [propSelectedDayTextStyle, styles.selectedDayLabel];\r\n      }\r\n    }\r\n\r\n    if (dateOutOfRange) { // selected start or end date, but not selectable now\r\n      return (\r\n        <View style={[styles.dayWrapper, customContainerStyle]}>\r\n          <View style={[customDateStyle, daySelectedStyle, propSelectedDayStyle ]}>\r\n            <Text style={[styles.dayLabel, textStyle,\r\n              styles.disabledText, disabledDatesTextStyle,\r\n              styles.selectedDisabledText, selectedDisabledDatesTextStyle,\r\n            ]}>\r\n              { day }\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={[styles.dayWrapper, customContainerStyle]}>\r\n          <TouchableOpacity\r\n            disabled={!enableDateChange}\r\n            style={[customDateStyle, daySelectedStyle, propSelectedDayStyle ]}\r\n            onPress={() => onPressDay({year, month, day}) }>\r\n            <Text style={[styles.dayLabel, textStyle, customTextStyle, selectedDayTextStyle]}>\r\n              { day }\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  else {  // dateOutOfRange = true but not selected start or end date\r\n    return (\r\n      <View style={styles.dayWrapper}>\r\n        <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle]}>\r\n          { day }\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n};\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}