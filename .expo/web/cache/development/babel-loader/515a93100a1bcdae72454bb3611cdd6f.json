{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/ikaur2/Desktop/scheduling-app-mobile/node_modules/react-native-calendar-picker/CalendarPicker/HeaderControls.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport { Utils } from \"./Utils\";\nimport Controls from \"./Controls\";\nexport default function HeaderControls(props) {\n  var styles = props.styles,\n      currentMonth = props.currentMonth,\n      currentYear = props.currentYear,\n      onPressNext = props.onPressNext,\n      onPressPrevious = props.onPressPrevious,\n      onPressMonth = props.onPressMonth,\n      onPressYear = props.onPressYear,\n      months = props.months,\n      previousComponent = props.previousComponent,\n      nextComponent = props.nextComponent,\n      previousTitle = props.previousTitle,\n      nextTitle = props.nextTitle,\n      previousTitleStyle = props.previousTitleStyle,\n      nextTitleStyle = props.nextTitleStyle,\n      textStyle = props.textStyle,\n      restrictMonthNavigation = props.restrictMonthNavigation,\n      maxDate = props.maxDate,\n      minDate = props.minDate,\n      headingLevel = props.headingLevel,\n      monthYearHeaderWrapperStyle = props.monthYearHeaderWrapperStyle;\n  var MONTHS = months || Utils.MONTHS;\n  var monthName = MONTHS[currentMonth];\n  var year = currentYear;\n  var disablePreviousMonth = restrictMonthNavigation && Utils.isSameMonthAndYear(minDate, currentMonth, currentYear);\n  var disableNextMonth = restrictMonthNavigation && Utils.isSameMonthAndYear(maxDate, currentMonth, currentYear);\n  var accessibilityProps = {\n    accessibilityRole: 'header'\n  };\n\n  if (Platform.OS === 'web') {\n    accessibilityProps['aria-level'] = headingLevel;\n  }\n\n  return React.createElement(View, {\n    style: styles.headerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Controls, {\n    disabled: disablePreviousMonth,\n    label: previousTitle,\n    component: previousComponent,\n    onPressControl: onPressPrevious,\n    styles: styles.previousContainer,\n    textStyles: [styles.navButtonText, textStyle, previousTitleStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.monthYearHeaderWrapper, monthYearHeaderWrapperStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPressMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, _extends({\n    style: [styles.monthHeaderMainText, textStyle]\n  }, accessibilityProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), monthName)), React.createElement(TouchableOpacity, {\n    onPress: onPressYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.yearHeaderMainText, textStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, year))), React.createElement(Controls, {\n    disabled: disableNextMonth,\n    label: nextTitle,\n    component: nextComponent,\n    onPressControl: onPressNext,\n    styles: styles.nextContainer,\n    textStyles: [styles.navButtonText, textStyle, nextTitleStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\nHeaderControls.propTypes = {\n  currentMonth: PropTypes.number,\n  currentYear: PropTypes.number,\n  onPressNext: PropTypes.func,\n  onPressPrevious: PropTypes.func,\n  onPressMonth: PropTypes.func,\n  onPressYear: PropTypes.func\n};","map":{"version":3,"sources":["/Users/ikaur2/Desktop/scheduling-app-mobile/node_modules/react-native-calendar-picker/CalendarPicker/HeaderControls.js"],"names":["React","PropTypes","Utils","Controls","HeaderControls","props","styles","currentMonth","currentYear","onPressNext","onPressPrevious","onPressMonth","onPressYear","months","previousComponent","nextComponent","previousTitle","nextTitle","previousTitleStyle","nextTitleStyle","textStyle","restrictMonthNavigation","maxDate","minDate","headingLevel","monthYearHeaderWrapperStyle","MONTHS","monthName","year","disablePreviousMonth","isSameMonthAndYear","disableNextMonth","accessibilityProps","accessibilityRole","Platform","OS","headerWrapper","previousContainer","navButtonText","monthYearHeaderWrapper","monthHeaderMainText","yearHeaderMainText","nextContainer","propTypes","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Platform,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Utils } from './Utils';\r\nimport Controls from './Controls';\r\n\r\nexport default function HeaderControls(props) {\r\n  const {\r\n    styles,\r\n    currentMonth,\r\n    currentYear,\r\n    onPressNext,\r\n    onPressPrevious,\r\n    onPressMonth,\r\n    onPressYear,\r\n    months,\r\n    previousComponent,\r\n    nextComponent,\r\n    previousTitle,\r\n    nextTitle,\r\n    previousTitleStyle,\r\n    nextTitleStyle,\r\n    textStyle,\r\n    restrictMonthNavigation,\r\n    maxDate,\r\n    minDate,\r\n    headingLevel,\r\n    monthYearHeaderWrapperStyle,\r\n  } = props;\r\n  const MONTHS = months || Utils.MONTHS; // English Month Array\r\n  const monthName = MONTHS[currentMonth];\r\n  const year = currentYear;\r\n\r\n  const disablePreviousMonth = restrictMonthNavigation && Utils.isSameMonthAndYear(minDate, currentMonth, currentYear);\r\n  const disableNextMonth = restrictMonthNavigation && Utils.isSameMonthAndYear(maxDate, currentMonth, currentYear);\r\n\r\n  const accessibilityProps = { accessibilityRole: 'header' };\r\n  if (Platform.OS === 'web') {\r\n    accessibilityProps['aria-level'] = headingLevel;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.headerWrapper}>\r\n      <Controls\r\n        disabled={disablePreviousMonth}\r\n        label={previousTitle}\r\n        component={previousComponent}\r\n        onPressControl={onPressPrevious}\r\n        styles={styles.previousContainer}\r\n        textStyles={[styles.navButtonText, textStyle, previousTitleStyle]}\r\n      />\r\n      <View style={[styles.monthYearHeaderWrapper,monthYearHeaderWrapperStyle]}>\r\n        <TouchableOpacity onPress={onPressMonth}>\r\n          <Text style={[styles.monthHeaderMainText, textStyle]} {...accessibilityProps}>\r\n            { monthName }\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={onPressYear}>\r\n          <Text style={[styles.yearHeaderMainText, textStyle]}>\r\n            { year }\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Controls\r\n        disabled={disableNextMonth}\r\n        label={nextTitle}\r\n        component={nextComponent}\r\n        onPressControl={onPressNext}\r\n        styles={styles.nextContainer}\r\n        textStyles={[styles.navButtonText, textStyle, nextTitleStyle]}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nHeaderControls.propTypes = {\r\n  currentMonth: PropTypes.number,\r\n  currentYear: PropTypes.number,\r\n  onPressNext: PropTypes.func,\r\n  onPressPrevious: PropTypes.func,\r\n  onPressMonth: PropTypes.func,\r\n  onPressYear: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}